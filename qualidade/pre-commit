#!/bin/bash
commit_error=false

ROOT_DIR="$(pwd)/"
LIST=$(git diff-index --cached --name-only --diff-filter=ACMR HEAD)
ERRORS_BUFFER=""
for file in $LIST
do
    EXTENSION=$(echo "$file" | grep ".php$")
    if [ "$EXTENSION" != "" ]; then
        ERRORS=$(php -l "$ROOT_DIR$file" 2>&1 | grep "Parse error")
        if [ "$ERRORS" != "" ]; then
            if [ "$ERRORS_BUFFER" != "" ]; then
                ERRORS_BUFFER="$ERRORS_BUFFER\n$ERRORS"
            else
                ERRORS_BUFFER="$ERRORS"
            fi
            echo "Erro de syntax encontrado no arquivo: $file "
        fi

        # Check for xdebug statments
        ERRORS=$(grep -nH xdebug_ "$ROOT_DIR$file" | \
                 sed -e 's/^/Found XDebug Statment : /')
        if [ "$ERRORS" != "" ]; then
            if [ "$ERRORS_BUFFER" != "" ]; then
                ERRORS_BUFFER="$ERRORS_BUFFER\n$ERRORS"
            else
                ERRORS_BUFFER="$ERRORS"
            fi
        fi
    fi
done

if [ "$ERRORS_BUFFER" != "" ]; then
    echo
    echo "Encontrado erros de análise no PHP: "
    echo -e $ERRORS_BUFFER
    echo
    echo "PHP erro de análise encontrado. Conserte os erros e faça o commit novamente.\n\n"
    commit_error=true
else
    echo "PHP nenhum erro de análise encontrado. Commitado com sucesso."
fi

echo "-------->  Executando php-cs-fixer"

PHP_CS_FIXER="$(pwd)/vendor/bin/php-cs-fixer"
PHP_CS_CONFIG=".php_cs"
CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACM -- '*.php')

if [ -n "$CHANGED_FILES" ]; then
    $PHP_CS_FIXER fix --config "$PHP_CS_CONFIG" $CHANGED_FILES;
    git add $CHANGED_FILES;
fi

echo "-------->   php-cs-fixer Finalizado"


files=$(git diff -- . ':!public/plugins' --cached --name-only --diff-filter=ACM | grep "\.js$")
if [ "$files" = "" ]; then
    exit 0
fi

pass=true

JS_ERRORS_BUFFER=""

echo -e "\nValidating JavaScript:\n"

for file in ${files}; do
    result=$(jslint ${file} | grep "${file} is OK")

    if [ "$result" != "" ]; then
        echo -e "\t\033[32mJSLint Passed: ${file}\033[0m"
    else
        JS_ERRORS=$(jslint ${file})
        JS_ERRORS_BUFFER="$JS_ERRORS_BUFFER\n$JS_ERRORS"
        echo -e "\t\033[31mJSLint Failed: ${file}\033[0m"
        pass=false
    fi
done

echo -e "\nValidação de JavaSCript completa\n"

if ! $pass; then
    echo -e "\033[41mCOMMIT FALHOU:\033[0m Sua commit contém arquivos não passaram pela análise do JSLint. Corrija os erros do JSLint e tente novamente."
    echo -e $JS_ERRORS_BUFFER
    echo
    commit_error=true
else
    echo -e "\033[42mCOMMIT COM SUCESSO\033[0m\n"
fi

if $commit_error; then
    exit 1
fi
