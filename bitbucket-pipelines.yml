image: php:7.1-fpm

options:
  max-time: 10
pipelines:
  pull-requests:
    '**': #this runs as default for any branch not elsewhere defined
      - step:
          name: Build
          caches:
            - composer
          script:
            - echo "Este script roda em todo pull request"
            - apt-get update && apt-get install -qy git curl libmcrypt-dev zlib1g-dev libicu-dev g++
            - yes | pecl install mcrypt-1.0.0
            - docker-php-ext-install pdo_mysql
            - apt-get update && apt-get install -y unzip
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer update --no-dev --ignore-platform-reqs
            - php -r "file_exists('.env') || copy('.env.pipelines', '.env');"
            - php artisan key:generate
            - php artisan migrate --seed
            - php artisan serve &
            - sleep 5
            - curl -vk http://localhost:8000
            - php artisan migrate:rollback
          services:
            - mysql

  branches:
    master:
      - step:
          name: Build
          caches:
            - composer
          script:
            - echo "This script runs only on commit to the master branch."
            - apt-get update && apt-get install -qy git curl libmcrypt-dev zlib1g-dev libicu-dev g++
            - yes | pecl install mcrypt-1.0.0
            - docker-php-ext-configure intl
            - docker-php-ext-install pdo_mysql intl
            - apt-get update && apt-get install -y unzip
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer update --no-dev --ignore-platform-reqs
            - php -r "file_exists('.env') || copy('.env.pipelines', '.env');"
            - php artisan migrate --seed
            - php artisan serve &
            - sleep 5
            - curl -vk http://localhost:8000
            - php artisan migrate:rollback
          services:
             - mysql

      - step:
          name: Deploy IBPRO
          trigger: manual
          deployment: Production-IBPRO
          script:
            - apt-get update && apt-get install -y git ssh
            - echo "Realizando deploy no https://app.ibpro.com.br/"
            - git fetch --unshallow
            - git push $HOST_IBPRO master


definitions:
  services:
    mysql:
      image: mysql:5.7
      environment:
        MYSQL_DATABASE: 'master_mdr'
        MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        MYSQL_USER: 'master_mdr'
        MYSQL_PASSWORD: 'master_mdr'